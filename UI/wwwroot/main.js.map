{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/shared/models/StartGameModel.ts","webpack:///./src/app/shared/services/shared.gameservice.ts","webpack:///./src/app/shared/services/shared.interceptor.ts","webpack:///./src/app/shared/services/shared.loginservice.ts","webpack:///./src/environments/environment.local.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./history/history.module\": [\n\t\t\"./src/app/history/history.module.ts\",\n\t\t\"history-history-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<body>\\n      <div class=\\\"container\\\">  \\n          <router-outlet></router-outlet>\\n    </div>\\n  </body>\\n  \"","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  \n})\nexport class AppComponent {\n  title = 'ClientApp';  \n}\n","import { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { GameComponent } from './game/game.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { RouterModule,Routes} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http'\nimport { ParamInterceptor } from './shared/services/shared.interceptor';\nimport { GameService } from 'src/app/shared/services/shared.gameservice';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent, pathMatch: 'full' },\n  { path: 'game', component: GameComponent },\n  { path: 'history', loadChildren: './history/history.module#HistoryModule' },\n  { path: 'error', component: ErrorComponent }\n  ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    GameComponent,\n    ErrorComponent\n    \n  ],\n  imports: [\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    BrowserModule,\n    RouterModule.forRoot(routes)\n        \n  ],\n  providers: [GameService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ParamInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZXJyb3IvZXJyb3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"{{errormessage}}\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GameService } from 'src/app/shared/services/shared.gameservice';\n\n@Component({\n  selector: 'error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css'],\n  providers: [GameService]\n})\nexport class ErrorComponent implements OnInit {\n  public errormessage:string = \"\";\n  constructor(private http: HttpClient, private gameService: GameService) {\n  }\n  \n  ngOnInit():void {\n    this.errormessage = localStorage.getItem('error');\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <div style=\\\"border:1px black\\\">\\n    <div [ngSwitch]=\\\"match.game.status\\\">\\n      <div *ngSwitchCase=2>In progress</div>\\n      <div *ngSwitchCase=1>Finished</div>\\n    </div>\\n    <div style=\\\"border:1px black\\\">Date of game - {{match.game.date | date:'dd-MM-yyyy'}}, time - {{match.game.date |\\n      date:'hh:mm'}} </div>\\n  </div>\\n  <div style=\\\"text-align:center\\\" *ngFor=\\\"let gamer of match.gamers\\\">\\n    Name - {{gamer.name}}<br>\\n    <div *ngIf=\\\"match.game.status==1||gamer.name.indexOf('Bot')!=0\\\">\\n      Points - {{gamer.points}} points.<br>\\n      <div [ngSwitch]=\\\"gamer.gamerStatus\\\">\\n        <div *ngSwitchCase=1> Gamer status - Loser</div>\\n        <div *ngSwitchCase=2> Gamer status - Winner</div>\\n        <div *ngSwitchCase=3> Gamer status - In game</div>\\n      </div>\\n    </div>\\n    <div>\\n      <div *ngFor=\\\"let round of match.rounds\\\">\\n        <div *ngIf=\\\"round.userInGameId==gamer.id\\\">\\n          <img *ngIf=\\\"match.game.status==1\\\" src=\\\"../../assets/{{round.suit}}-{{round.value}}.png\\\">\\n          <img *ngIf=\\\"(match.game.status!==1)&&(gamer.name.indexOf('Bot')!=0)\\\" src=\\\"../../assets/{{round.suit}}-{{round.value}}.png\\\">\\n          <img *ngIf=\\\"(match.game.status!==1)&&(gamer.name.indexOf('Bot')==0)\\\" src=\\\"../../assets/untitled.png\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <button *ngIf=\\\"(gamer.name.indexOf('Bot')!=0)&&(match.game.status!=1)\\\" (click)=\\\"nextRound()\\\">Get card</button>\\n    <button *ngIf=\\\"(gamer.name.indexOf('Bot')!=0)&&(match.game.status!=1)\\\" (click)=\\\"stopGame()\\\">Enough!</button>\\n  </div>\\n</div>\"","import { environment } from 'src/environments/environment.local';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IMatch } from 'src/app/shared/interfaces/IMatch';\nimport { GameService } from 'src/app/shared/services/shared.gameservice';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css'],\n  providers: [GameService]\n})\nexport class GameComponent implements OnInit {\n\n  match: IMatch = {\n    game: {\n      id:null,\n      countOfRounds: 0,\n      status: 0,\n      date: new Date(),\n    },\n    rounds: [],\n    gamers: [],\n  };\n  cardUrl: string = environment.imageUrl;\n  username: string = \"q\";\n\n  constructor(private http: HttpClient, private gameService: GameService,private router: Router) {\n  }\n\n  ngOnInit():void {\n    this.getGame();\n  }\n\n  getGame():void {\n    this.gameService.getGame(this.http, this.username).subscribe(result => {  \n      this.match = result;    \n      console.log(this.match);\n    }, error => { console.error(error); this.router.navigate(['/error']); });\n  }\n\n  nextRound():void {\n    this.gameService.nextRound(this.http, this.username).subscribe(result => {  \n      this.match = result;      \n    }, error => { console.error(error); this.router.navigate(['/error']); });\n  }\n\n  stopGame():void {\n    this.gameService.stopGame(this.http, this.username).subscribe(result => {  \n      this.match = result;      \n    }, error => { console.error(error); this.router.navigate(['/error']); });\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2>Enter the name and choose the count of bots to start the game! </h2>\\n<input [(ngModel)]=\\\"username\\\"  list=\\\"usernames\\\" #name=\\\"ngModel\\\" required>\\n<datalist id=\\\"usernames\\\">\\n    <option *ngFor=\\\"let user of users\\\" [ngValue]=\\\"user.userName\\\">{{user}}</option>\\n</datalist>\\n<div [hidden]=\\\"name.valid || name.untouched \\\" class=\\\"alert alert-danger\\\">\\n  Enter the name\\n</div><br><br>  \\n<select [(ngModel)]=\\\"countofbots\\\"  required>\\n    <option >1</option>\\n    <option >2</option>\\n    <option >3</option>\\n    <option >4</option>\\n    <option >5</option>\\n</select>\\n<h2>\\n  <button [disabled]=\\\"name.invalid\\\" (click)=\\\"startGame()\\\">Start game</button>\\n  <button [disabled]=\\\"name.invalid\\\" (click)=\\\"watchHistory()\\\">Watch game history</button>\\n</h2>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginService } from 'src/app/shared/services/shared.loginservice';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [LoginService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  countofbots: string = '1';\r\n  users: string[];\r\n  username: string;\r\n  token: string;\r\n  nomer: number;\r\n  constructor(private http: HttpClient, private router: Router, private loginservice: LoginService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUsersName();\r\n  }\r\n\r\n  public getUsersName(): void {\r\n    this.loginservice.getUsersName(this.http).subscribe(result => {\r\n      this.users = result;\r\n    }, error => {\r\n      console.error(error);\r\n      localStorage.setItem('error', JSON.stringify(error['error']));\r\n      this.router.navigate(['/error']);\r\n    });\r\n  }\r\n\r\n  public login(): void {\r\n    this.loginservice.login(this.http, this.username).subscribe(result => {\r\n      localStorage.setItem('token', JSON.stringify(result));\r\n    }, error => {\r\n      console.error(error);\r\n      localStorage.setItem('error', JSON.stringify(error['error']));\r\n      this.router.navigate(['/error']);\r\n    });\r\n  }\r\n\r\n  public startGame(): void {\r\n    this.login();\r\n    this.loginservice.startGame(this.http, this.username, this.countofbots).subscribe(result => {\r\n      this.router.navigate(['/game'])\r\n    }, error => {\r\n      console.error(error);\r\n      localStorage.setItem('error', JSON.stringify(error['error']));\r\n      this.router.navigate(['/error']);\r\n    });\r\n  }\r\n\r\n  public watchHistory(): void {\r\n    this.login();\r\n    this.router.navigate(['/history']);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export class StartGameModel{\r\n    public userName:string;\r\n    public countOfBots:number;\r\n  }","import { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { environment } from 'src/environments/environment.local';\nimport { IMatch } from 'src/app/shared/interfaces/IMatch';\nimport { Observable } from 'rxjs';\n\nexport class GameService {\n  public getGame(http: HttpClient, userName: string): Observable<IMatch> {\n    return http.get<IMatch>(environment.apiUrl + '/api/Game/GetLastMatch/'+userName);\n  }\n\n  public nextRound(http: HttpClient, userName: string): Observable<IMatch> {\n    return http.put<IMatch>(environment.apiUrl + '/api/Game/NextRound/' + userName, 1)\n  }\n\n  public stopGame(http: HttpClient, userName: string): Observable<IMatch> {\n    return http.put<IMatch>(environment.apiUrl + '/api/Game/NextRound/' + userName, 0)\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest ,HttpHeaders} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ParamInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (!req.url.includes('api/Account/')) {\r\n            var token = JSON.parse(localStorage.getItem('token'));\r\n            const paramReq = req.clone({\r\n                headers: req.headers.set('Authorization','bearer ' + token['access_token'])\r\n            });\r\n            return next.handle(paramReq);\r\n        } \r\n            return next.handle(req);\r\n    }\r\n}","import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.local';\nimport { StartGameModel } from 'src/app/shared/models/StartGameModel';\n\nexport class LoginService {\n\n  public getUsersName(http: HttpClient): Observable<string[]> {\n    return http.get<string[]>(environment.apiUrl+'/api/Account/GetUserNames');\n  };\n\n  public login(http: HttpClient, username: string): Observable<any> {\n    return http.get(environment.apiUrl + '/api/Account/LogIn/' + username);\n  };\n\n  public startGame(http: HttpClient, username: string,countofbots:string): Observable<any> {\n    let model = new StartGameModel();\n    model.userName = username;\n    model.countOfBots = parseInt(countofbots);\n    return http.post(environment.apiUrl + '/api/Account/StartGame', model);\n  }\n}\n","export const environment = {\n  production: true,\n  apiUrl: 'http://localhost:58669',\n  imageUrl :'src/Card/'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}